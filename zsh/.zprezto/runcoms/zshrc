#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

alias ls='ls --color=auto -h --group-directories-first'
alias grep='grep --color=auto'
alias stow='stow --dotfiles'

export MANOPT="--no-justification"
export MANWIDTH="72"

function chpwd() {
    emulate -L zsh
    ls
}

zstyle ':completion:*' rehash true

# The following lines were added by compinstall
zstyle :compinstall filename '/Users/abrice/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# enable aws completions
source /usr/local/share/zsh/site-functions/aws_zsh_completer.sh

source $HOME/.zprezto/modules/syntax-highlighting/external/zsh-syntax-highlighting.zsh

for k in "${(@k)ZSH_HIGHLIGHT_STYLES}"; do
    ZSH_HIGHLIGHT_STYLES[$k]=${ZSH_HIGHLIGHT_STYLES[$k]:gs/fg=red,bold/fg=yellow,bold}
    ZSH_HIGHLIGHT_STYLES[$k]=${ZSH_HIGHLIGHT_STYLES[$k]:gs/fg=green,bold/fg=red}
    ZSH_HIGHLIGHT_STYLES[$k]=${ZSH_HIGHLIGHT_STYLES[$k]:gs/fg=green/fg=red,bold}
done

unsetopt sharehistory

abrice-upgrade() {
    echo "Updating brew packages"
    echo "<====================>"
    brew update && brew upgrade
    echo

    echo "Updating global npm packages"
    echo "<==========================>"
    npm update -g --depth=0
    echo "Done"
}

aws-end-session() {
    unset $(bash -c 'echo ${!AWS@}')
    rm -f $HOME/.aws/environment
}

aws-all() {
    local function aws-sts() {
        local account=$1
        local role=arn:aws:iam::${account}:role/cjorganization/CJDeveloperAccessRole
        local mfa_serial=arn:aws:iam::597974043991:mfa/abrice@cj.com
        local mfa_token=$2

        aws sts assume-role \
            --role-arn "$role" \
            --role-session-name "bootstrap$$" \
            --serial-number "$mfa_serial" \
            --token-code "$mfa_token" \
            --duration-seconds 43200 \
            --query \
            'Credentials |
            join (`\n`,
            values({
              AccessKeyId: join(``, [`export AWS_ACCESS_KEY_ID=`,AccessKeyId]),
              SecretAccessKey:join(``, [`export AWS_SECRET_ACCESS_KEY=`,SecretAccessKey]),
              SessionToken:join(``, [`export AWS_SESSION_TOKEN=`,SessionToken])
            }))' \
            --output text
    }

    local function aws-developer() {
        eval $(aws-sts $1 $2)
    }

    if [[ -z "$1" ]]; then
        echo "usage: aws-all <duo mobile aws key>"
        return 1
    fi

    aws-developer 114272735376 $1

    rm -f $HOME/.aws/environment
    touch $HOME/.aws/environment
    echo "export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID >> $HOME/.aws/environment
    echo "export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY >> $HOME/.aws/environment
    echo "export AWS_SESSION_TOKEN="$AWS_SESSION_TOKEN >> $HOME/.aws/environment

    open $(aws-get-url.js)
}
